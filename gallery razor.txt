@page "/galleries"
<PageLayout PageName="@Localizer["Gallery"]" SinglePageURL="gallery">
    <Grid DivClass="m-0" TableClass="table-striped" Data="ViewModel.Data" Context=cn>
        <GridHeader>
            <th>@Localizer["File Name"]</th>
            <th>@Localizer["URL"]</th>
            <th>@Localizer["Copy"]</th>
            <th>@Localizer["Image"]</th>
            <th>@Localizer["Edit"]</th>
            <th>@Localizer["Delete"]</th>

        </GridHeader>
        <GridRow>
            <td>@cn.Title</td>
            <td>@cn.URL</td>
             <td style="width:110px">
                <button type="button" id="borderremove" align="center" class="mdi mdi-bookmark-multiple-outline" @onclick="()=>Edit(cn.MediaID.Value)"></button></td>
            <td><img src="@cn.FileName" width="50" height="50" /></td>
            <td style="width:110px">
                <button type="button" align="center" class="btn btn-dark waves-effect waves-light" @onclick="()=>Edit(cn.MediaID.Value)"><i class="fa fa-edit"></i></button></td>
                 <td style="width:110px">
                <button type="button" align="center" class="btn btn-dark waves-effect waves-light" @onclick="()=>Delete(cn.MediaID.Value)"><i class="fa fa-trash"></i></button>
            </td>
           
        </GridRow>
    </Grid>
    <PaginationLink PageSize="ViewModel.PageSize" PageIndex="ViewModel.PageIndex" TotalPages="ViewModel.TotalPages" LoadPageIndex="LoadPageIndex"></PaginationLink>

</PageLayout>



@code {
      PagedList<GalleryModel> ViewModel = new();
      PagedListPostModel SearchModel = new();
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    private async Task LoadData()
    {
        ViewModel = await RestService.PostAsync<PagedList<GalleryModel>, PagedListPostModel>("media/get-images", SearchModel);
    }
    private async Task LoadPageIndex(int pageIndex)
    {
        SearchModel.PageIndex = pageIndex;
        await LoadData();
    }
      void Edit(int id)
    {
        Nav.NavigateTo($"gallery/{id}");
    }
     async Task Delete(int id)
    {
        if (await RestService.DeleteAsync("media/delete-image", id, true))
        {
            await JS.SuccessMessage("Deleted Successfully");
            await LoadData();
        }
    }

}
